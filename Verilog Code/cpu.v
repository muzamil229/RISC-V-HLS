// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cpu_cpu,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7s6-cpga196-2I,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.235500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=518,HLS_SYN_LUT=1878,HLS_VERSION=2024_2}" *)

module cpu (
        ap_clk,
        ap_rst,
        mem_address0,
        mem_ce0,
        mem_we0,
        mem_d0,
        mem_q0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
output  [9:0] mem_address0;
output   mem_ce0;
output   mem_we0;
output  [31:0] mem_d0;
input  [31:0] mem_q0;

reg   [4:0] reg_file_address0;
reg    reg_file_ce0;
reg    reg_file_we0;
reg   [31:0] reg_file_d0;
wire   [31:0] reg_file_q0;
reg    reg_file_ce1;
wire   [31:0] reg_file_q1;
wire    grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start;
wire    grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_done;
wire    grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_idle;
wire    grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_ready;
wire   [4:0] grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_address0;
wire    grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_ce0;
wire    grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_we0;
wire   [31:0] grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_d0;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_done;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_idle;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_ready;
wire   [9:0] grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_address0;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_ce0;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_we0;
wire   [31:0] grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_d0;
wire   [4:0] grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_address0;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_ce0;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_we0;
wire   [31:0] grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_d0;
wire   [4:0] grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_address1;
wire    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_ce1;
reg    grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    reg_file_we0_out;
reg    grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [5:0] ap_NS_fsm;
wire    ap_NS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state3;
reg    reg_file_we0_local;
reg   [31:0] reg_file_d0_local;
reg    reg_file_ce0_local;
reg   [4:0] reg_file_address0_local;
wire    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start_reg = 1'b0;
end

cpu_reg_file_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
reg_file_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(reg_file_address0),
    .ce0(reg_file_ce0),
    .we0(reg_file_we0),
    .d0(reg_file_d0),
    .q0(reg_file_q0),
    .address1(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_address1),
    .ce1(reg_file_ce1),
    .q1(reg_file_q1)
);

cpu_cpu_Pipeline_VITIS_LOOP_78_1 grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start),
    .ap_done(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_done),
    .ap_idle(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_idle),
    .ap_ready(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_ready),
    .reg_file_address0(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_address0),
    .reg_file_ce0(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_ce0),
    .reg_file_we0(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_we0),
    .reg_file_d0(grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_d0)
);

cpu_cpu_Pipeline_VITIS_LOOP_101_2 grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start),
    .ap_done(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_done),
    .ap_idle(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_idle),
    .ap_ready(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_ready),
    .mem_address0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_address0),
    .mem_ce0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_ce0),
    .mem_we0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_we0),
    .mem_d0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_d0),
    .mem_q0(mem_q0),
    .reg_file_address0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_address0),
    .reg_file_ce0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_ce0),
    .reg_file_we0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_we0),
    .reg_file_d0(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_d0),
    .reg_file_q0(reg_file_q0),
    .reg_file_address1(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_address1),
    .reg_file_ce1(grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_ce1),
    .reg_file_q1(reg_file_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state5) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start_reg <= 1'b1;
        end else if ((grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_ready == 1'b1)) begin
            grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start_reg <= 1'b1;
        end else if ((grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_ready == 1'b1)) begin
            grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start_reg <= 1'b0;
        end
    end
end

assign ap_ST_fsm_state1_blk = 1'b0;

always @ (*) begin
    if ((grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_file_address0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_file_address0 = grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_address0;
    end else begin
        reg_file_address0 = reg_file_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_file_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_file_address0_local = 64'd2;
    end else begin
        reg_file_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_file_ce0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_file_ce0 = grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_ce0;
    end else begin
        reg_file_ce0 = reg_file_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_file_ce0_local = 1'b1;
    end else begin
        reg_file_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_file_ce1 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_ce1;
    end else begin
        reg_file_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_file_d0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_file_d0 = grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_d0;
    end else begin
        reg_file_d0 = reg_file_d0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_file_d0_local = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_file_d0_local = 32'd10;
    end else begin
        reg_file_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_file_we0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_reg_file_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_file_we0 = grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_reg_file_we0;
    end else begin
        reg_file_we0 = (reg_file_we0_out | 1'b0);
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_file_we0_local = 1'b1;
    end else begin
        reg_file_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_NS_fsm_state5 = ap_NS_fsm[32'd4];

assign grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_ap_start_reg;

assign grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start = grp_cpu_Pipeline_VITIS_LOOP_78_1_fu_63_ap_start_reg;

assign mem_address0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_address0;

assign mem_ce0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_ce0;

assign mem_d0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_d0;

assign mem_we0 = grp_cpu_Pipeline_VITIS_LOOP_101_2_fu_69_mem_we0;

assign reg_file_we0_out = reg_file_we0_local;

endmodule //cpu
